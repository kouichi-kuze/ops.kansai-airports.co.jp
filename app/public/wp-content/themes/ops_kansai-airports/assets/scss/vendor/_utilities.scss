// 共通スタイル
@use "../utils/variables" as g;
@use "../utils/mixin" as m;

.d-none {
    display: none !important;
}

.d-block {
  display: block !important;
}

.d-inline-block {
  display: inline-block !important;
}

@media only screen and (min-width: g.$desktop-breakpoint-sm) {
  .d-sm-none {
    display: none !important; 
  }

  .d-sm-block {
    display: block !important;
  }

  .d-inline-md-block,
  .d-md-inline-block  {
    display: inline-block !important;
  }
}

@media only screen and (min-width: g.$desktop-breakpoint-md) {
  .d-md-none {
    display: none !important; 
  }

  .d-md-block {
    display: block !important;
  }

  .d-inline-md-block,
  .d-md-inline-block {
    display: inline-block !important;
  }

  .d-md-flex {
    display: flex !important;
  }

  .just-content-md-center {
    justify-content: center;
  }

  .justify-content-md-between {
    justify-content: space-between;
  }

  .align-items-md-end {
    align-items: flex-end;
  }

  .flex-row-md-reverse {
    flex-flow: row-reverse;
  }

  .flex-md-wrap {
    flex-wrap: wrap;
  }
}

@media only screen and (min-width: g.$desktop-breakpoint-lg) {
  .d-lg-none {
    display: none !important;
  }
  
  .d-lg-block {
    display: block !important;
  }

  .d-inline-lg-block,
  .d-lg-inline-block {
    display: inline-block !important;
  }

  .d-lg-flex {
    display: flex !important;
  }

  .justify-content-lg-between {
    justify-content: space-between !important;
  }

  .align-items-lg-end {
    align-items: flex-end;
  }

  .flex-row-lg-reverse {
    flex-flow: row-reverse;
  }

  .flex-lg-wrap {
    flex-wrap: wrap;	
  }

  .just-content-lg-center {
    justify-content: center;
  }
}

@media only screen and (min-width: g.$desktop-breakpoint-xl) {
  .d-xl-none {
    display: none !important;
  }
  
  .d-xl-block {
    display: block !important;
  }
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.link-none {
  pointer-events: none;
}

.mx-auto {
  @include m.mx-auto;
}

// Import string module for replace function

// margin utility classes with responsive variants
// Scale values in rem units mapped to safe class-name parts
$margin-scales: (
  0.5: 1,
  1:   2,
  1.5: 3,
  2:   4,
  2.5: 5,
  3:   6,
  4:   7,
  5:   8,
  6:   9,
);

// Generate base margin classes
@each $value, $name in $margin-scales {
  .mt-#{$name} { margin-top: $value * 1rem !important; }
  .mb-#{$name} { margin-bottom: $value * 1rem !important; }
  .ml-#{$name} { margin-left: $value * 1rem !important; }
  .mr-#{$name} { margin-right: $value * 1rem !important; }
}

// Responsive breakpoints
$desktop-breakpoint-sm: 576px;
$desktop-breakpoint-md: 768px;
$desktop-breakpoint-lg: 992px;
$desktop-breakpoint-xl: 1200px;

// Generate responsive margin classes for each breakpoint
@each $bp, $min in (
  sm: $desktop-breakpoint-sm,
  md: $desktop-breakpoint-md,
  lg: $desktop-breakpoint-lg,
  xl: $desktop-breakpoint-xl
) {
  @media only screen and (min-width: $min) {
    @each $value, $name in $margin-scales {
      .mt-#{$bp}-#{$name} { margin-top: $value * 1rem !important; }
      .mb-#{$bp}-#{$name} { margin-bottom: $value * 1rem !important; }
      .ml-#{$bp}-#{$name} { margin-left: $value * 1rem !important; }
      .mr-#{$bp}-#{$name} { margin-right: $value * 1rem !important; }
    }
  }
}
 a{
	text-decoration: none;
    transition: all 0.3s ease-out;
}
@media only screen and (min-width: g.$desktop-breakpoint-md) {
	a{
		cursor: pointer;
	} 
}
*, *::before, *::after{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}













