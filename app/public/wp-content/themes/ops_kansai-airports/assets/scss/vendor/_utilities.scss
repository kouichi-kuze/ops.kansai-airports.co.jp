// 共通スタイル
@use "../utils/variables" as g;
@use "../utils/mixin" as m;

.d-none {
    display: none !important;
}

.d-block {
  display: block !important;
}

.d-inline-block {
  display: inline-block !important;
}

@media only screen and (min-width: g.$desktop-breakpoint-sm) {
  .d-sm-none {
    display: none !important; 
  }

  .d-sm-block {
    display: block !important;
  }

  .d-inline-md-block,
  .d-md-inline-block  {
    display: inline-block !important;
  }
}

@media only screen and (min-width: g.$desktop-breakpoint-md) {
  .d-md-none {
    display: none !important; 
  }

  .d-md-block {
    display: block !important;
  }

  .d-inline-md-block,
  .d-md-inline-block {
    display: inline-block !important;
  }

  .d-md-flex {
    display: flex !important;
  }

  .just-content-md-center {
    justify-content: center;
  }

  .justify-content-md-between {
    justify-content: space-between;
  }

  .align-items-md-end {
    align-items: flex-end;
  }

  .flex-row-md-reverse {
    flex-flow: row-reverse;
  }

  .flex-md-wrap {
    flex-wrap: wrap;
  }
}

@media only screen and (min-width: g.$desktop-breakpoint-lg) {
  .d-lg-none {
    display: none !important;
  }
  
  .d-lg-block {
    display: block !important;
  }

  .d-inline-lg-block,
  .d-lg-inline-block {
    display: inline-block !important;
  }

  .d-lg-flex {
    display: flex !important;
  }

  .justify-content-lg-between {
    justify-content: space-between !important;
  }

  .align-items-lg-end {
    align-items: flex-end;
  }

  .flex-row-lg-reverse {
    flex-flow: row-reverse;
  }

  .flex-lg-wrap {
    flex-wrap: wrap;
  }

  .just-content-lg-center {
    justify-content: center;
  }
}

@media only screen and (min-width: g.$desktop-breakpoint-xl) {
  .d-xl-none {
    display: none !important;
  }
  
  .d-xl-block {
    display: block !important;
  }
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.link-none {
  pointer-events: none;
}

.mx-atuo {
  @include m.mx-atuo;
}

// Generates classes .mt-x, .mb-x, .ml-x, .mr-x where x is one of the defined scale values (rem)
// Scale: 0.5, 1, 1.5, 2, 2.5, 3, 4, 5, 6
$margin-scales: 0.5, 1, 1.5, 2, 2.5, 3, 4, 5, 6;

@each $i in $margin-scales {
  .mt-#{$i} {
    margin-top: #{$i}rem !important;
  }
  .mb-#{$i} {
    margin-bottom: #{$i}rem !important;
  }
  .ml-#{$i} {
    margin-left: #{$i}rem !important;
  }
  .mr-#{$i} {
    margin-right: #{$i}rem !important;
  }
}

@media only screen and (min-width: g.$desktop-breakpoint-sm) {
  @each $i in $margin-scales {
    .mt-sm-#{$i} {
      margin-top: #{$i}rem !important;
    }
    .mb-sm-#{$i} {
      margin-bottom: #{$i}rem !important;
    }
    .ml-sm-#{$i} {
      margin-left: #{$i}rem !important;
    }
    .mr-sm-#{$i} {
      margin-right: #{$i}rem !important;
    }
  }
}

@media only screen and (min-width: g.$desktop-breakpoint-md) {
  @each $i in $margin-scales {
    .mt-md-#{$i} {
      margin-top: #{$i}rem !important;
    }
    .mb-md-#{$i} {
      margin-bottom: #{$i}rem !important;
    }
    .ml-md-#{$i} {
      margin-left: #{$i}rem !important;
    }
    .mr-md-#{$i} {
      margin-right: #{$i}rem !important;
    }
  }
}

@media only screen and (min-width: g.$desktop-breakpoint-lg) {
  @each $i in $margin-scales {
    .mt-lg-#{$i} {
      margin-top: #{$i}rem !important;
    }
    .mb-lg-#{$i} {
      margin-bottom: #{$i}rem !important;
    }
    .ml-lg-#{$i} {
      margin-left: #{$i}rem !important;
    }
    .mr-lg-#{$i} {
      margin-right: #{$i}rem !important;
    }
  }
}

@media only screen and (min-width: g.$desktop-breakpoint-xl) {
  @each $i in $margin-scales {
    .mt-xl-#{$i} {
      margin-top: #{$i}rem !important;
    }
    .mb-xl-#{$i} {
      margin-bottom: #{$i}rem !important;
    }
    .ml-xl-#{$i} {
      margin-left: #{$i}rem !important;
    }
    .mr-xl-#{$i} {
      margin-right: #{$i}rem !important;
    }
  }
}